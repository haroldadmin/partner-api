openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /getCertificate:
    post:
      tags:
      - documents
      summary: Get Certificate of Insurance
      operationId: getCOI
      parameters:
      - name: quoteId
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
  /api/v1/token:
    post:
      tags:
      - authentication
      summary: Get Token
      operationId: getToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
  /api/v1/quickQuote:
    post:
      tags:
      - quotes
      summary: Create Quick Quote
      operationId: createQuickQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickQuoteRequest'
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QQuoteResponse'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
      security:
      - bearerToken: []
  /api/v1/userDetails:
    get:
      tags:
      - users
      summary: Get User Details
      operationId: getUserDetails
      parameters:
      - name: userEmail
        in: query
        required: true
        schema:
          type: string
          format: email
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsResponse'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
      security:
      - bearerToken: []
  /api/v1/registerWebhook:
    get:
      tags:
      - webhooks
      summary: Register Webhook
      operationId: registerWebhook
      parameters:
      - name: endpoint
        in: query
        required: true
        schema:
          type: string
      - name: event
        in: query
        required: true
        schema:
          type: string
          enum:
          - PURCHASE
          - CANCELLATION
          - RENEWAL
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        "301":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
      security:
      - bearerToken: []
  /api/v1/quoteStatus:
    get:
      tags:
      - quotes
      summary: Get Quote Status
      operationId: getQuoteStatus
      parameters:
      - name: quoteId
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteStatusResponse'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
      security:
      - bearerToken: []
  /api/v1/occupations:
    get:
      tags:
      - occupations
      summary: Get Occupations
      operationId: getOccupations
      parameters:
      - name: search
        in: query
        required: false
        schema:
          type: string
      - name: productFilter
        in: query
        required: false
        schema:
          type: string
          enum:
          - HEALTH_PROFESSIONAL
          - MANAGEMENT_LIABILITY
          - CYBER_LIABILITY
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupationResponse'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
      security:
      - bearerToken: []
  /api/v1/linkFullQuote:
    get:
      tags:
      - quotes
      summary: Link Full Quote
      operationId: linkFullQuote
      parameters:
      - name: quoteId
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: redirect
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponse'
        "301":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponse'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
      security:
      - bearerToken: []
  /api/v1/activePolicies:
    get:
      tags:
      - users
      summary: Get Active Policies
      operationId: getActivePolicies
      parameters:
      - name: userEmail
        in: query
        required: true
        schema:
          type: string
          format: email
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivePoliciesResponse'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Authentication Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Server Error
      security:
      - bearerToken: []
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: false
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        expiresInSeconds:
          type: integer
          format: int64
    AuthenticationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AuthResponse'
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: true
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        authType:
          type: string
          enum:
          - USERNAME_PASSWORD
    QQuoteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/QuickQuoteResponse'
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: true
    QuickQuoteResponse:
      type: object
      properties:
        quoteId:
          type: string
          format: uuid
        product:
          type: string
          enum:
          - HEALTH_PROFESSIONAL
          - MANAGEMENT_LIABILITY
          - CYBER_LIABILITY
        annualPrice:
          type: number
          format: double
        preferredLimit:
          type: integer
          format: int64
        piPreferredLimit:
          type: integer
          format: int64
        pandPLPreferredLimit:
          type: integer
          format: int64
    ClientInformation:
      required:
      - emailAddress
      - firstName
      - lastName
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        abn:
          maxLength: 11
          minLength: 11
          type: string
        entityType:
          type: string
          default: SOLE_TRADER
          enum:
          - ASSOCIATION
          - COOPERATIVE
          - EMPLOYEE
          - PARTNERSHIP
          - PRIVATE_COMPANY
          - PUBLIC_COMPANY
          - SOLE_TRADER
        companyName:
          type: string
        mobileNumber:
          type: string
        landlineNumber:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        suburb:
          type: string
        state:
          type: string
          default: NSW
          enum:
          - ACT
          - NSW
          - NT
          - QLD
          - SA
          - TAS
          - VIC
        postalCode:
          maxLength: 4
          minLength: 3
          type: string
        emailAddress:
          type: string
          format: email
    QuickQuoteRequest:
      required:
      - clientInformation
      - occupationId
      - product
      type: object
      properties:
        product:
          type: string
          enum:
          - HEALTH_PROFESSIONAL
          - MANAGEMENT_LIABILITY
          - CYBER_LIABILITY
        occupationId:
          type: integer
          format: int64
        averageRevenue:
          minimum: 0
          type: integer
          format: int64
          default: 100000
        preferredLimit:
          maximum: 20000000
          minimum: 500000
          type: integer
          format: int64
          default: 10000000
        piPreferredLimit:
          maximum: 20000000
          minimum: 500000
          type: integer
          format: int64
          default: 1000000
        clientInformation:
          $ref: '#/components/schemas/ClientInformation'
        pandPLPreferredLimit:
          type: integer
          format: int64
    UserDetailsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClientInformation'
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: true
    RegisterResponse:
      type: object
      properties:
        data:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: true
    Policy:
      type: object
      properties:
        quoteId:
          type: string
          format: uuid
        product:
          type: string
          enum:
          - HEALTH_PROFESSIONAL
          - MANAGEMENT_LIABILITY
          - CYBER_LIABILITY
        occupationId:
          type: integer
          format: int64
        inceptionDate:
          type: string
          description: ISO format date YYYY-MM-DD
        purchaseDate:
          type: string
          description: ISO format date YYYY-MM-DD
        expiryDate:
          type: string
          description: ISO format date YYYY-MM-DD
        preferredLimit:
          type: integer
          format: int64
        piPreferredLimit:
          type: integer
          format: int64
        annualPrice:
          type: number
          format: double
        pandPLPreferredLimit:
          type: integer
          format: int64
    QuoteResponse:
      type: object
      properties:
        status:
          type: string
          default: PURCHASED
          enum:
          - QUICK_QUOTE
          - FULL_QUOTE
          - PURCHASED
          - CANCELLED
        purchasedPolicy:
          $ref: '#/components/schemas/Policy'
    QuoteStatusResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/QuoteResponse'
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: true
    Occupation:
      type: object
      properties:
        name:
          type: string
        occupationId:
          type: integer
          format: int64
        supportedProducts:
          type: array
          items:
            type: string
            enum:
            - HEALTH_PROFESSIONAL
            - MANAGEMENT_LIABILITY
            - CYBER_LIABILITY
    OccupationResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Occupation'
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: true
    LinkResponse:
      type: object
      properties:
        data:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: true
    ActivePoliciesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Policy'
        code:
          type: integer
          format: int32
        message:
          type: string
        success:
          type: boolean
          default: true
  securitySchemes:
    bearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
